#version 430 core


// inputs
in vec2 UV;			// tex coords, for the quad of pass 2

// outputs; these correspond to values in the drawBuffers call for glDrawBuffers -- GL_NONE, GL_COLOR_ATTACHMENT0, GL_COLOR_ATTACHMENT1
layout (location = 0) out vec4 FragColor;	// actual color output, used in pass2 (default frame buffer color location)
layout(rgba32f, binding = 0) uniform image2D img_input;		

uniform int screenWidth;
uniform int screenHeight;

void main()
{
	vec2 textureDim;
	//textureDim.x = 1024;	// screen width
	//textureDim.y = 768;		// screen height
	textureDim.x = screenWidth;
	textureDim.y = screenHeight;
	
	vec2 imageReadDim;
	imageReadDim.x = UV.x * textureDim.x;
	imageReadDim.y = UV.y * textureDim.y;
	
	ivec2 imageReadPosition = ivec2(imageReadDim);
	vec4 color = imageLoad(img_input, imageReadPosition);
	//color.b = 130.0f;
	FragColor = color;		// output to Default FBO's color buffer
}